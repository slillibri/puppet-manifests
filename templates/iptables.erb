#!/bin/bash

INET_IP=<%= ipaddress_eth0 %>
INET_IFACE="eth0"

PVT_IP=<%= ipaddress_eth0_0 %>
PVT_IFACE="eth0:0"

LO_IFACE="lo"
LO_IP="127.0.0.1"

echo "1" > /proc/sys/net/ipv4/ip_forward

## Set default policy to allow while setting up chains
/sbin/iptables -P INPUT ACCEPT
/sbin/iptables -P OUTPUT ACCEPT
/sbin/iptables -P FORWARD ACCEPT

## Flush all chains
/sbin/iptables -F

/sbin/iptables -N bad_tcp_packets

/sbin/iptables -N allowed
/sbin/iptables -N tcp_packets
/sbin/iptables -N udp_packets
/sbin/iptables -N icmp_packets

/sbin/iptables -A bad_tcp_packets -p tcp --tcp-flags SYN,ACK SYN,ACK -m state --state NEW -j REJECT --reject-with tcp-reset 
/sbin/iptables -A bad_tcp_packets -p tcp ! --syn -m state --state NEW -j LOG --log-prefix "New not syn:"
/sbin/iptables -A bad_tcp_packets -p tcp ! --syn -m state --state NEW -j DROP

/sbin/iptables -A allowed -p TCP --syn -j ACCEPT
/sbin/iptables -A allowed -p TCP -m state --state ESTABLISHED,RELATED -j ACCEPT
/sbin/iptables -A allowed -p TCP -j DROP

<% if has_variable?("tcp_packets") then %>
  <% tcp_packets.each do |source, ports| %>
    <% ports.each do |port| %>
      /sbin/iptables -A tcp_packets -p TCP -s <%= source %> --dport <%= port %> -j allowed
    <% end %>
  <% end %>
<% end %>

<% if has_variable?("udp_packets") then %>
  <% udp_packets.each do |rules| %>
    <% (source,port) = rules.split(/:/) %>
    /sbin/iptables -A udp_packets -p UDP -s <%= source %> -j ACCEPT
  <% end %>
<% end %>

<% if has_variable?("icmp_packets") then %>
  <% icmp_packets.each do |rules| %>
    <% (source,type) = rules.split(/:/) %>
    /sbin/iptables -A icmp_packets -p ICMP -s <%= source %> --icmp-type <%= type %> -j ACCEPT
  <% end %>
<% end %>

/sbin/iptables -A INPUT -p tcp -j bad_tcp_packets
/sbin/iptables -A OUTPUT -p tcp -j bad_tcp_packets
/sbin/iptables -A FORWARD -p tcp -j bad_tcp_packets

#Make sure the system can talk to itself on all interfaces
<% network.each do |interface| %>
  <% address = Facter.fact("ipaddress_#{interface}").value %>
  <% iface = interface.gsub(/_/, ":") %>
  /sbin/iptables -A tcp_packets -p TCP -s <%= address %> -d <%= address %> -j allowed
  /sbin/iptables -A INPUT -p ALL -d <%= address %> -m state --state ESTABLISHED,RELATED -j ACCEPT
  /sbin/iptables -A INPUT -p TCP -i <%= iface %> -j tcp_packets
  /sbin/iptables -A INPUT -p ICMP -i  <%= iface %> -j icmp_packets
  /sbin/iptables -A INPUT -p UDP -i <%= iface %> -j udp_packets
  /sbin/iptables -A OUTPUT -p ALL -s <%= address %> -j ACCEPT
<% end %>

/sbin/iptables -A INPUT -m limit --limit 3/minute --limit-burst 3 -j LOG --log-level DEBUG --log-prefix "IPT INPUT packet died: "


/sbin/iptables -A FORWARD -m limit --limit 3/minute --limit-burst 3 -j LOG --log-level DEBUG --log-prefix "IPT FORWARD packet died: "

/sbin/iptables -A OUTPUT -m limit --limit 3/minute --limit-burst 3 -j LOG --log-level DEBUG --log-prefix "IPT OUTPUT packet died: "

/sbin/iptables -t nat -A POSTROUTING -o $INET_IFACE -j SNAT --to-source $INET_IP

/sbin/iptables -P INPUT DROP
/sbin/iptables -P OUTPUT DROP
/sbin/iptables -P FORWARD DROP

